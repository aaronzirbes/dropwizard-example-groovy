apply plugin: 'groovy'

repositories {
    mavenCentral()
}

String dropwizardVersion = '0.6.0'

sourceCompatibility = 1.7
version = '0.1.0'
jar {
    manifest {
        attributes 'Main-Class': 'com.example.helloworld.ContactsService'
    }
}

dependencies {
    groovy 'org.codehaus.groovy:groovy-all:2.0.5'
    compile ("com.yammer.dropwizard:dropwizard-core:${dropwizardVersion}") {
        // provided by groovy-eclipse-batch
        exclude group: 'asm', module: 'asm'
    }
    compile ("com.yammer.dropwizard:dropwizard-testing:${dropwizardVersion}") {
        // provided by groovy-eclipse-batch
        exclude group: 'asm', module: 'asm'
    }
    compile ("com.yammer.dropwizard:dropwizard-hibernate:${dropwizardVersion}") {
        // provided by groovy-eclipse-batch
        exclude group: 'org.codehaus.groovy', module: 'groovy'
        exclude group: 'asm', module: 'asm'
    }
    compile ("com.yammer.dropwizard:dropwizard-hibernate:${dropwizardVersion}") {
        exclude group: 'asm', module: 'asm'
    }

    compile ("com.yammer.dropwizard:dropwizard-migrations:${dropwizardVersion}") {
        // provided by groovy-eclipse-batch
        exclude group: 'org.codehaus.groovy', module: 'groovy'
        exclude group: 'antlr', module: 'antlr'
        exclude group: 'asm', module: 'asm'
    }
    compile ("com.yammer.dropwizard:dropwizard-auth:${dropwizardVersion}") {
        // provided by groovy-eclipse-batch
        exclude group: 'org.codehaus.groovy', module: 'groovy'
        exclude group: 'antlr', module: 'antlr'
        exclude group: 'asm', module: 'asm'
    }
    compile 'com.h2database:h2:1.3.168'
    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-all:1.9.5'
    compile 'org.easytesting:fest-assert-core:2.0M8'
    compile 'asm:asm:3.3'
    testCompile 'commons-cli:commons-cli:1.2'

    // Needed to get around bug in gradle due to reflection. Normally this is needed at runtime only.
    // http://forums.gradle.org/gradle/topics/receiving_a_java_lang_exceptionininitializererror_when_building_groovy_but_not_java_for_same_project?topic=receiving_a_java_lang_exceptionininitializererror_when_building_groovy_but_not_java_for_same_project
    compile group: 'com.sun.jersey', name: 'jersey-client', version: '1.15'
}

sourceSets {
    integration {
        groovy.srcDir file('src/test/integration/groovy')
        resources.srcDir file('src/test/resources')

        compileClasspath = sourceSets.main.output + configurations.testRuntime
        runtimeClasspath = output + sourceSets.main.output + configurations.testRuntime
//        groovy {
//            srcDir 'src/test/integration/groovy'
//        }
    }
    unit {
        groovy.srcDir file('src/test/unit/groovy')
        resources.srcDir file('src/test/resources')

        compileClasspath = sourceSets.main.output + configurations.testRuntime
        runtimeClasspath = output + sourceSets.main.output + configurations.testRuntime
//        groovy {
//            srcDir 'src/test/unit/groovy'
//        }
    }
}

task integration(type: Test, dependsOn: jar) {
    testClassesDir = sourceSets.integration.output.classesDir
    classpath = sourceSets.integration.runtimeClasspath

    systemProperties['jar.path'] = jar.archivePath
}

task unit(type: Test) {
    testClassesDir = sourceSets.unit.output.classesDir
    classpath = sourceSets.unit.runtimeClasspath
}

check.dependsOn integration, unit